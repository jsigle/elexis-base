#!/usr/bin/env ruby
# (c) 2010 Niklaus Giger, niklaus.giger@member.fsf.org
# Small script to create a shared repository for elexis (grandma)
# based on lucy, the grandma of all elexis repositories
# If running under linux, then add also a hourly update job for cron 
#
require 'fileutils'

Hg_User = "myusername"
Hg_Dest = "/var/cache/hg"
Hg_Update = "/etc/cron.hourly/elexis_grandma"

Hg_Repos = { 
	'elexis-base'     => "http://elexis.hg.sourceforge.net/hgroot/elexis/elexis-base",
	'elexis-addons'   => "http://elexis.hg.sourceforge.net/hgroot/elexis/elexis-addons",
#	'medelexis-trunk' => "https://repo.medelexis.ch/hg/medelexis-trunk"
}

toUpdate = ''

Hg_Repos.each { |name,origin|
    dest = "#{Hg_Dest}/#{name}"
	cmd  = "hg clone --noupdate #{origin} #{dest}"
	if File.directory?(dest)
		puts "Destination #{dest} already exists. Skipping #{cmd}"
	else
		puts cmd
		if !system(cmd) 
		  puts "Running #{cmd} failed"
		  exit 3
		end
	 	add = "default-push = " + origin.sub('https://', "ssh://#{Hg_User}@")
		system("echo #{add} >> #{dest}/.hg/hgrc") if /https/.match(origin)
 	end
 	
	toUpdate += "cd #{dest} && hg pull --quiet\n"
}

if RUBY_PLATFORM.downcase.include?("linux")
	update_job = File.open(Hg_Update, "w+")
	update_job.puts "# Generated by #{__FILE__} at #{Time.now}"
	update_job.puts toUpdate
	update_job.close
	FileUtils::Verbose.chmod(0744, Hg_Update)
	FileUtils::Verbose.chown("root", "root", Hg_Update)
end
